'''
Подсчитать, сколько было выделено памяти под переменные в ранее разработанных программах
в рамках первых трех уроков.
Проанализировать результат и определить программы с наиболее эффективным использованием памяти.

Исходная формулировка задачи:
3.2. Во втором массиве сохранить индексы четных элементов первого массива.
Например, если дан массив со значениями 8, 3, 15, 6, 4, 2,
то во второй массив надо заполнить значениями 1, 4, 5, 6
(или 0, 3, 4, 5 - если индексация начинается с нуля),
т.к. именно в этих позициях первого массива стоят четные числа.
'''
# На ПК 64-х разрядная ОС, версия Python 3.9
from sys import getsizeof

# Задание пустых списков и переменной number, через которую будут вноситься значения в массив user_num
user_num = []
even_num = []
number = None

print(f'Первоначальный размер переменной user_num типа {type(user_num)} составляет {getsizeof(user_num)} байтов')
print(f'Первоначальный размер переменной even_num типа {type(even_num)} составляет {getsizeof(even_num)} байтов')
print(f'Первоначальный размер переменной number типа {type(number)} составляет {getsizeof(number)} байтов\n')

# Цикл добавления элементов в массив user_num
while True:
    number = input('Введите целое число для добавления в массив (для выхода введите +): ')
    if number == '+':
        print('Ввод элементов окончен')
        break
    else:
        user_num.append(int(number))

# Цикл определения четных элементов и внесения их номеров в массив even_num
for i in range(len(user_num)):
    if user_num[i] % 2 == 0:
        even_num.append(i)

print(f'Из массива {user_num} четные элементы имеют позиции {even_num} (индексация начинается с 0)\n')

print(f'Размер переменной user_num типа {type(user_num)} после работы программы составляет {getsizeof(user_num)} байтов')
print(f'Размер переменной even_num типа {type(even_num)} после работы программы составляет {getsizeof(even_num)} байтов')
print(f'Размер переменной number типа {type(number)} после работы программы составляет {getsizeof(number)} байтов\n')

'''
Первоначальные размеры переменных:
    1) user_num - 56 байтов (пустой список)
    2) even_num - 56 байтов (пустой список)
    3) number - 16 байтов (None)
    
После работы программы размеры переменных изменились и приняли значения:
    1) user_num - 120 байтов (список)
    2) even_num - 88 байтов (список)
    3) number - 50 байтов (str)
    
Переменная number, ввиду алгоритма, использующего символ '+' для выхода приняла формат str и выросла до 50 байт
Возможность для улучшения: изменить тип переменной на int и сделать условие выхода, если number == 1000000
(можно использовать любое число, тогда размер переменной вместо 50 байтов станет 28 байтов;
но тогда надо точно знать, что такое число не будет введено в наш список и предупредить пользователя)
'''